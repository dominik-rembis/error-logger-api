security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'argon2i'
    providers:
        app_user_provider:
            id: shared.security.user_provider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/login
            stateless: true
            json_login:
                check_path: /login
                username_path: email
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/
            stateless: true
            jwt: ~
    role_hierarchy:
        ROLE_MANAGER: ROLE_DEVELOPER
        ROLE_ADMINISTRATOR: ROLE_MANAGER
    access_control:
        - { path: ^\/user\/account$, methods: POST, roles: ROLE_ADMINISTRATOR }
        - { path: ^(\/user)(\/.+)?(\/account)$, methods: [GET, PUT], roles: ROLE_DEVELOPER }
        - { path: ^(\/user\/aggregate)(\/.+)?$, methods: [GET, POST, PUT], roles: ROLE_MANAGER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: argon2i
                cost: 4
                time_cost: 3
                memory_cost: 10